{
 :paths   ["src" "resources"]
 :deps
 {org.clojure/clojure     {:mvn/version "1.11.0"}
  clj-http/clj-http       {:mvn/version "3.13.1"}
  org.clojure/tools.cli   {:mvn/version "1.1.230"}
  cheshire/cheshire       {:mvn/version "5.10.0"}
  org.clojure/core.async  {:mvn/version "1.5.648"}

  ; this is used for embeddings
  net.mikera/vectorz-clj  {:mvn/version "0.48.0"}
  ; not used directly here?
  ; TODO: clean up
  org.clj-commons/hickory {:mvn/version "0.7.5"}
  }
 :aliases {
           :call
           {:main-opts ["-m" "pyjama.cli.call"]}

           ; clj -X:agent :project-dir "." :prompt '"write clojure test cases for namespace pyjama.io.template"' :agents-edn '"test-resources/agentic/code.edn"' :id :clj-project
           :agents
           {:exec-fn pyjama.cli.agent/run-agents}

           :native-cli-agent
           {:main-opts ["-m" "clj.native-image" "pyjama.cli.agent"
                        "--initialize-at-build-time"
                        "--initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl"
                        "--initialize-at-run-time=sun.java2d.Disposer"
                        "--enable-url-protocols=https"
                        "-march=native"
                        "--trace-object-instantiation=java.security.SecureRandom"
                        "--trace-object-instantiation=java.lang.Thread"
                        "--enable-url-protocols=http"
                        ;; optional native image name override
                        ;"-H:Name=pyjama"
                        "-o pyjamamazing"
                        ]
            ;:jvm-opts  ["-Dclojure.compiler.direct-linking=true"]
            :extra-deps
            {clj.native-image/clj.native-image
             {:git/url "https://github.com/taylorwood/clj.native-image.git"
              :sha     "7708e7fd4572459c81f6a6b8e44c96f41cdd92d4"}}}

           :native-cli
           {:main-opts ["-m" "clj.native-image" "pyjama.cli.call"
                        "--initialize-at-build-time"
                        "--initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl"
                        "--initialize-at-run-time=sun.java2d.Disposer"
                        "--enable-url-protocols=https"
                        "-march=native"
                        "--trace-object-instantiation=java.security.SecureRandom"
                        "--trace-object-instantiation=java.lang.Thread"
                        "--enable-url-protocols=http"
                        ;; optional native image name override
                        ;"-H:Name=pyjama"
                        "-o pyjama"
                        ]
            :jvm-opts  ["-Dclojure.compiler.direct-linking=true"]
            :extra-deps
            {clj.native-image/clj.native-image
             {:git/url "https://github.com/taylorwood/clj.native-image.git"
              :sha     "7708e7fd4572459c81f6a6b8e44c96f41cdd92d4"}}}

           :test {:extra-paths ["test" "test-resources"]
                  :extra-deps  {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                  :main-opts   ["-m" "cognitect.test-runner"]
                  :exec-fn     cognitect.test-runner.api/test}}

 }